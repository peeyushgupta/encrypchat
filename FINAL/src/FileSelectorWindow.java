/*
 * NewJFrame3.java
 *
 * Created on October 10, 2009, 12:41 PM
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.StringTokenizer;

/**
 * @author Peeyush
 */
public class FileSelectorWindow extends javax.swing.JFrame {
    String x, stp;
    String mkey = "";
    String t_list[] = new String[100];
    ;
    String ip_list[] = new String[100];
    String jp_list[] = new String[100];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;

    /**
     * Creates new form FileSelectorWindow
     */
    public FileSelectorWindow(String s[], String p) {
        initComponents();
        stp = p;
        x = "172.22.28.101";
        t_list = s;

        for (int i = 0; i < t_list.length; i++) {
            StringTokenizer st = new StringTokenizer(t_list[i], " ");
            //while(st.hasMoreTokens)
            jp_list[i] = st.nextToken();
            ip_list[i] = st.nextToken();
        }

    }

    public FileSelectorWindow(String s[], String p, String Key) {
        initComponents();
        stp = p;
        x = "172.22.28.101";
        t_list = s;
        mkey = Key;
        for (int i = 0; i < t_list.length; i++) {
            StringTokenizer st = new StringTokenizer(t_list[i], " ");
            //while(st.hasMoreTokens)
            jp_list[i] = st.nextToken();
            ip_list[i] = st.nextToken();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new FileSelectorWindow("pqrs").setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jFileChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        int j;
        try {
            Runtime rt = Runtime.getRuntime();
            Process pr = rt.exec("cmd /c dir");
            // Process pr = rt.exec("c:\\helloworld.exe");

            BufferedReader input = new BufferedReader(new InputStreamReader(pr.getInputStream()));

            String line = null;

            while ((line = input.readLine()) != null) {
                System.out.println(line);
            }

            int exitVal = pr.waitFor();
            System.out.println("Exited with error code " + exitVal);

        } catch (Exception e) {
            System.out.println(e.toString());
            e.printStackTrace();
        }


        try {

            System.out.println("You chose to open this file: " +
                    jFileChooser1.getSelectedFile().getName());
            this.setVisible(false);
            // File file=    jFileChooser1.getSelectedFile();
            //String fname=jFileChooser1.getSelectedFile().getName();
            //         FileInputStream fos=new FileInputStream(file);


            for (int i = 0; i < ip_list.length; i++) {
                FileInputStream fos;
                File file = jFileChooser1.getSelectedFile();
                String fname = jFileChooser1.getSelectedFile().getName();

                System.out.println(jFileChooser1.getSelectedFile().getAbsolutePath());
                if (mkey.equals("") == false) {
                    Runtime rt = Runtime.getRuntime();
                    //   Process pr = rt.exec("cmd /c dir");
                    Process pr = rt.exec("./a.out " + jFileChooser1.getSelectedFile().getAbsolutePath() + " " + "enc.txt" + " " + mkey);

                    BufferedReader input = new BufferedReader(new InputStreamReader(pr.getInputStream()));

                    String line = null;

                    while ((line = input.readLine()) != null) {
                        System.out.println(line);
                    }
                    int tnum = 0;
                    File file1 = new File("enc.txt");
                    fos = new FileInputStream(file1);
                } else {
                    fos = new FileInputStream(file);
                }

                for (j = 0; j < ip_list[i].length(); j++) {
                    if (ip_list[i].charAt(j) == 10)
                        break;
                }
                x = ip_list[i].substring(0, j);
                System.out.println("ip my" + x + "rfrfrfrfrfrfrf");
                String msd = "lko " + jFileChooser1.getSelectedFile().getName() + " " + stp;
                byte pqr[] = msd.getBytes();

//x=ip_list[i];
                DatagramSocket as = new DatagramSocket();
                DatagramPacket ps = new DatagramPacket(pqr, pqr.length, InetAddress.getByName(x), 6789);
                as.send(ps);
                System.out.print(x);

                FileSend fs = new FileSend(fos, jp_list[i], fname, x);
                fs.setPriority(Thread.MIN_PRIORITY);
                fs.start();


            }

            MainWindow.up.setVisible(true);
        } catch (Exception e) {
            System.out.print(e + "eyush");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed
    // End of variables declaration//GEN-END:variables

}
