/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileSend.java
 *
 * Created on 19 Nov, 2009, 2:42:07 PM
 */

/**
 * @author Pankaj
 */

import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.net.Socket;

public class FileSend extends Thread {
    FileInputStream fos;
    String fname, x, jp_list;

    /** Creates new form FileSend */
    public FileSend(FileInputStream f, String jp, String fn, String xx) {

        fos = f;
        jp_list = jp;
        fname = fn;
        x = xx;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
/*    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
*/

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }


    public void run() {
        int tnum = 0;
        try {


            Socket client = new Socket(x, 8668);
            System.out.print(client);
            //  Socket client=ss.accept();

            DataOutputStream outToServer = new DataOutputStream(client.getOutputStream());


            OutputStream netOut = client.getOutputStream();

            OutputStream doc = new DataOutputStream(new BufferedOutputStream(netOut));


            byte[] buf = new byte[2048];
            int num = fos.read(buf);
            while (num != (-1)) {
                doc.write(buf, 0, num);
                doc.flush();
                tnum = tnum + num;
                num = fos.read(buf);

            }
            fos.close();

            doc.close();
            //MainWindow.up.list1.add(jp_list + "                 " + fname + "       " + String.valueOf(tnum));

        } catch (Exception e) {

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
